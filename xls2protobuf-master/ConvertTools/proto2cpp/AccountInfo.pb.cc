// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Author: Jumbo 
// source: AccountInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AccountInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace JX {

namespace {

const ::google::protobuf::Descriptor* AccountInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountInfo_ARRAY_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountInfo_ARRAY_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AccountInfo_2eproto() {
  protobuf_AddDesc_AccountInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AccountInfo.proto");
  GOOGLE_CHECK(file != NULL);
  AccountInfo_descriptor_ = file->message_type(0);
  static const int AccountInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountInfo, name_),
  };
  AccountInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountInfo_descriptor_,
      AccountInfo::default_instance_,
      AccountInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(AccountInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountInfo, _is_default_instance_));
  AccountInfo_ARRAY_descriptor_ = file->message_type(1);
  static const int AccountInfo_ARRAY_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountInfo_ARRAY, items_),
  };
  AccountInfo_ARRAY_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountInfo_ARRAY_descriptor_,
      AccountInfo_ARRAY::default_instance_,
      AccountInfo_ARRAY_offsets_,
      -1,
      -1,
      -1,
      sizeof(AccountInfo_ARRAY),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountInfo_ARRAY, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountInfo_ARRAY, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AccountInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountInfo_descriptor_, &AccountInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountInfo_ARRAY_descriptor_, &AccountInfo_ARRAY::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AccountInfo_2eproto() {
  delete AccountInfo::default_instance_;
  delete AccountInfo_reflection_;
  delete AccountInfo_ARRAY::default_instance_;
  delete AccountInfo_ARRAY_reflection_;
}

void protobuf_AddDesc_AccountInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021AccountInfo.proto\022\002JX\"\033\n\013AccountInfo\022\014"
    "\n\004name\030\001 \001(\014\"3\n\021AccountInfo_ARRAY\022\036\n\005ite"
    "ms\030\001 \003(\0132\017.JX.AccountInfob\006proto3", 113);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AccountInfo.proto", &protobuf_RegisterTypes);
  AccountInfo::default_instance_ = new AccountInfo();
  AccountInfo_ARRAY::default_instance_ = new AccountInfo_ARRAY();
  AccountInfo::default_instance_->InitAsDefaultInstance();
  AccountInfo_ARRAY::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AccountInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AccountInfo_2eproto {
  StaticDescriptorInitializer_AccountInfo_2eproto() {
    protobuf_AddDesc_AccountInfo_2eproto();
  }
} static_descriptor_initializer_AccountInfo_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountInfo::AccountInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JX.AccountInfo)
}

void AccountInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AccountInfo::AccountInfo(const AccountInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:JX.AccountInfo)
}

void AccountInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountInfo::~AccountInfo() {
  // @@protoc_insertion_point(destructor:JX.AccountInfo)
  SharedDtor();
}

void AccountInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AccountInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountInfo_descriptor_;
}

const AccountInfo& AccountInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AccountInfo_2eproto();
  return *default_instance_;
}

AccountInfo* AccountInfo::default_instance_ = NULL;

AccountInfo* AccountInfo::New(::google::protobuf::Arena* arena) const {
  AccountInfo* n = new AccountInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountInfo::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AccountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JX.AccountInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JX.AccountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JX.AccountInfo)
  return false;
#undef DO_
}

void AccountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JX.AccountInfo)
  // optional bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:JX.AccountInfo)
}

::google::protobuf::uint8* AccountInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JX.AccountInfo)
  // optional bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:JX.AccountInfo)
  return target;
}

int AccountInfo::ByteSize() const {
  int total_size = 0;

  // optional bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AccountInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AccountInfo::MergeFrom(const AccountInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void AccountInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountInfo::CopyFrom(const AccountInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountInfo::IsInitialized() const {

  return true;
}

void AccountInfo::Swap(AccountInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountInfo::InternalSwap(AccountInfo* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountInfo_descriptor_;
  metadata.reflection = AccountInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountInfo

// optional bytes name = 1;
void AccountInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountInfo::name() const {
  // @@protoc_insertion_point(field_get:JX.AccountInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JX.AccountInfo.name)
}
 void AccountInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JX.AccountInfo.name)
}
 void AccountInfo::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JX.AccountInfo.name)
}
 ::std::string* AccountInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:JX.AccountInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountInfo::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:JX.AccountInfo.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountInfo_ARRAY::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountInfo_ARRAY::AccountInfo_ARRAY()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JX.AccountInfo_ARRAY)
}

void AccountInfo_ARRAY::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AccountInfo_ARRAY::AccountInfo_ARRAY(const AccountInfo_ARRAY& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:JX.AccountInfo_ARRAY)
}

void AccountInfo_ARRAY::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

AccountInfo_ARRAY::~AccountInfo_ARRAY() {
  // @@protoc_insertion_point(destructor:JX.AccountInfo_ARRAY)
  SharedDtor();
}

void AccountInfo_ARRAY::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AccountInfo_ARRAY::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountInfo_ARRAY::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountInfo_ARRAY_descriptor_;
}

const AccountInfo_ARRAY& AccountInfo_ARRAY::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AccountInfo_2eproto();
  return *default_instance_;
}

AccountInfo_ARRAY* AccountInfo_ARRAY::default_instance_ = NULL;

AccountInfo_ARRAY* AccountInfo_ARRAY::New(::google::protobuf::Arena* arena) const {
  AccountInfo_ARRAY* n = new AccountInfo_ARRAY;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountInfo_ARRAY::Clear() {
  items_.Clear();
}

bool AccountInfo_ARRAY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JX.AccountInfo_ARRAY)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .JX.AccountInfo items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JX.AccountInfo_ARRAY)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JX.AccountInfo_ARRAY)
  return false;
#undef DO_
}

void AccountInfo_ARRAY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JX.AccountInfo_ARRAY)
  // repeated .JX.AccountInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:JX.AccountInfo_ARRAY)
}

::google::protobuf::uint8* AccountInfo_ARRAY::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JX.AccountInfo_ARRAY)
  // repeated .JX.AccountInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:JX.AccountInfo_ARRAY)
  return target;
}

int AccountInfo_ARRAY::ByteSize() const {
  int total_size = 0;

  // repeated .JX.AccountInfo items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountInfo_ARRAY::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AccountInfo_ARRAY* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountInfo_ARRAY>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AccountInfo_ARRAY::MergeFrom(const AccountInfo_ARRAY& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  items_.MergeFrom(from.items_);
}

void AccountInfo_ARRAY::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountInfo_ARRAY::CopyFrom(const AccountInfo_ARRAY& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountInfo_ARRAY::IsInitialized() const {

  return true;
}

void AccountInfo_ARRAY::Swap(AccountInfo_ARRAY* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountInfo_ARRAY::InternalSwap(AccountInfo_ARRAY* other) {
  items_.UnsafeArenaSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountInfo_ARRAY::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountInfo_ARRAY_descriptor_;
  metadata.reflection = AccountInfo_ARRAY_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountInfo_ARRAY

// repeated .JX.AccountInfo items = 1;
int AccountInfo_ARRAY::items_size() const {
  return items_.size();
}
void AccountInfo_ARRAY::clear_items() {
  items_.Clear();
}
const ::JX::AccountInfo& AccountInfo_ARRAY::items(int index) const {
  // @@protoc_insertion_point(field_get:JX.AccountInfo_ARRAY.items)
  return items_.Get(index);
}
::JX::AccountInfo* AccountInfo_ARRAY::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:JX.AccountInfo_ARRAY.items)
  return items_.Mutable(index);
}
::JX::AccountInfo* AccountInfo_ARRAY::add_items() {
  // @@protoc_insertion_point(field_add:JX.AccountInfo_ARRAY.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::JX::AccountInfo >*
AccountInfo_ARRAY::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:JX.AccountInfo_ARRAY.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::JX::AccountInfo >&
AccountInfo_ARRAY::items() const {
  // @@protoc_insertion_point(field_list:JX.AccountInfo_ARRAY.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace JX

// @@protoc_insertion_point(global_scope)
