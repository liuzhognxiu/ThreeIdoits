// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Author: Jumbo 
// source: GoodsInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GoodsInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace JX {

namespace {

const ::google::protobuf::Descriptor* GoodsInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoodsInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GoodsInfo_Price_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoodsInfo_Price_reflection_ = NULL;
const ::google::protobuf::Descriptor* GoodsInfo_GoodsAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoodsInfo_GoodsAttr_reflection_ = NULL;
const ::google::protobuf::Descriptor* GoodsInfo_ARRAY_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoodsInfo_ARRAY_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GoodsInfo_2eproto() {
  protobuf_AddDesc_GoodsInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GoodsInfo.proto");
  GOOGLE_CHECK(file != NULL);
  GoodsInfo_descriptor_ = file->message_type(0);
  static const int GoodsInfo_offsets_[31] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, goods_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, level_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, club_vip_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, qb_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, consume_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, time_unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, is_online_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, can_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, can_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, online_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, offline_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, privileged_plat_id_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, privileged_plat_is_online_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, privileged_plat_can_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, privileged_plat_can_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, payment_terms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, valid_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, sort_priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, suit_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, bag_sort_priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, price_discount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, vip_discount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, price_table_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, goods_attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, limit_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, subsystemid_),
  };
  GoodsInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GoodsInfo_descriptor_,
      GoodsInfo::default_instance_,
      GoodsInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(GoodsInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, _is_default_instance_));
  GoodsInfo_Price_descriptor_ = GoodsInfo_descriptor_->nested_type(0);
  static const int GoodsInfo_Price_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_Price, price_dq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_Price, price_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_Price, price_value_),
  };
  GoodsInfo_Price_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GoodsInfo_Price_descriptor_,
      GoodsInfo_Price::default_instance_,
      GoodsInfo_Price_offsets_,
      -1,
      -1,
      -1,
      sizeof(GoodsInfo_Price),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_Price, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_Price, _is_default_instance_));
  GoodsInfo_GoodsAttr_descriptor_ = GoodsInfo_descriptor_->nested_type(1);
  static const int GoodsInfo_GoodsAttr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_GoodsAttr, attr_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_GoodsAttr, attr_value_),
  };
  GoodsInfo_GoodsAttr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GoodsInfo_GoodsAttr_descriptor_,
      GoodsInfo_GoodsAttr::default_instance_,
      GoodsInfo_GoodsAttr_offsets_,
      -1,
      -1,
      -1,
      sizeof(GoodsInfo_GoodsAttr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_GoodsAttr, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_GoodsAttr, _is_default_instance_));
  GoodsInfo_ARRAY_descriptor_ = file->message_type(1);
  static const int GoodsInfo_ARRAY_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_ARRAY, items_),
  };
  GoodsInfo_ARRAY_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GoodsInfo_ARRAY_descriptor_,
      GoodsInfo_ARRAY::default_instance_,
      GoodsInfo_ARRAY_offsets_,
      -1,
      -1,
      -1,
      sizeof(GoodsInfo_ARRAY),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_ARRAY, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo_ARRAY, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GoodsInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GoodsInfo_descriptor_, &GoodsInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GoodsInfo_Price_descriptor_, &GoodsInfo_Price::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GoodsInfo_GoodsAttr_descriptor_, &GoodsInfo_GoodsAttr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GoodsInfo_ARRAY_descriptor_, &GoodsInfo_ARRAY::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GoodsInfo_2eproto() {
  delete GoodsInfo::default_instance_;
  delete GoodsInfo_reflection_;
  delete GoodsInfo_Price::default_instance_;
  delete GoodsInfo_Price_reflection_;
  delete GoodsInfo_GoodsAttr::default_instance_;
  delete GoodsInfo_GoodsAttr_reflection_;
  delete GoodsInfo_ARRAY::default_instance_;
  delete GoodsInfo_ARRAY_reflection_;
}

void protobuf_AddDesc_GoodsInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017GoodsInfo.proto\022\002JX\"\325\006\n\tGoodsInfo\022\020\n\010g"
    "oods_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\014\022\013\n\003sex\030\003 \001(\r"
    "\022\023\n\013level_limit\030\004 \001(\r\022\026\n\016club_vip_level\030"
    "\005 \001(\005\022\014\n\004qb_2\030\006 \001(\005\022\024\n\014consume_type\030\007 \001("
    "\r\022\021\n\ttime_unit\030\010 \001(\r\022\021\n\tis_online\030\t \001(\r\022"
    "\017\n\007can_buy\030\n \001(\r\022\024\n\014can_recharge\030\013 \001(\r\022\023"
    "\n\013online_time\030\014 \001(\014\022\024\n\014offline_time\030\r \001("
    "\014\022\037\n\027privileged_plat_id_list\030\016 \003(\r\022!\n\031pr"
    "ivileged_plat_is_online\030\017 \001(\r\022\037\n\027privile"
    "ged_plat_can_buy\030\020 \001(\r\022$\n\034privileged_pla"
    "t_can_recharge\030\021 \001(\r\022\025\n\rpayment_terms\030\022 "
    "\001(\r\022\022\n\nvalid_time\030\023 \001(\014\022\025\n\rsort_priority"
    "\030\024 \001(\r\022\023\n\013suit_number\030\025 \001(\005\022\031\n\021bag_sort_"
    "priority\030\026 \001(\r\022\016\n\006status\030\027 \001(\014\022\014\n\004rank\030\030"
    " \001(\r\022\026\n\016price_discount\030\031 \001(\r\022\024\n\014vip_disc"
    "ount\030\032 \001(\r\022(\n\013price_table\030\033 \003(\0132\023.JX.Goo"
    "dsInfo.Price\022+\n\ngoods_attr\030\034 \003(\0132\027.JX.Go"
    "odsInfo.GoodsAttr\022\023\n\013description\030\035 \001(\014\022\020"
    "\n\010limit_id\030\036 \001(\r\022\023\n\013subSystemId\030\037 \001(\014\032B\n"
    "\005Price\022\020\n\010price_dq\030\001 \001(\r\022\022\n\nprice_gold\030\002"
    " \001(\r\022\023\n\013price_value\030\003 \001(\r\0322\n\tGoodsAttr\022\021"
    "\n\tattr_type\030\001 \001(\r\022\022\n\nattr_value\030\002 \001(\r\"/\n"
    "\017GoodsInfo_ARRAY\022\034\n\005items\030\001 \003(\0132\r.JX.Goo"
    "dsInfob\006proto3", 934);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GoodsInfo.proto", &protobuf_RegisterTypes);
  GoodsInfo::default_instance_ = new GoodsInfo();
  GoodsInfo_Price::default_instance_ = new GoodsInfo_Price();
  GoodsInfo_GoodsAttr::default_instance_ = new GoodsInfo_GoodsAttr();
  GoodsInfo_ARRAY::default_instance_ = new GoodsInfo_ARRAY();
  GoodsInfo::default_instance_->InitAsDefaultInstance();
  GoodsInfo_Price::default_instance_->InitAsDefaultInstance();
  GoodsInfo_GoodsAttr::default_instance_->InitAsDefaultInstance();
  GoodsInfo_ARRAY::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GoodsInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GoodsInfo_2eproto {
  StaticDescriptorInitializer_GoodsInfo_2eproto() {
    protobuf_AddDesc_GoodsInfo_2eproto();
  }
} static_descriptor_initializer_GoodsInfo_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoodsInfo_Price::kPriceDqFieldNumber;
const int GoodsInfo_Price::kPriceGoldFieldNumber;
const int GoodsInfo_Price::kPriceValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoodsInfo_Price::GoodsInfo_Price()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JX.GoodsInfo.Price)
}

void GoodsInfo_Price::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GoodsInfo_Price::GoodsInfo_Price(const GoodsInfo_Price& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:JX.GoodsInfo.Price)
}

void GoodsInfo_Price::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  price_dq_ = 0u;
  price_gold_ = 0u;
  price_value_ = 0u;
}

GoodsInfo_Price::~GoodsInfo_Price() {
  // @@protoc_insertion_point(destructor:JX.GoodsInfo.Price)
  SharedDtor();
}

void GoodsInfo_Price::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GoodsInfo_Price::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsInfo_Price::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoodsInfo_Price_descriptor_;
}

const GoodsInfo_Price& GoodsInfo_Price::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GoodsInfo_2eproto();
  return *default_instance_;
}

GoodsInfo_Price* GoodsInfo_Price::default_instance_ = NULL;

GoodsInfo_Price* GoodsInfo_Price::New(::google::protobuf::Arena* arena) const {
  GoodsInfo_Price* n = new GoodsInfo_Price;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoodsInfo_Price::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GoodsInfo_Price*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(price_dq_, price_value_);

#undef ZR_HELPER_
#undef ZR_

}

bool GoodsInfo_Price::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JX.GoodsInfo.Price)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 price_dq = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_dq_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_price_gold;
        break;
      }

      // optional uint32 price_gold = 2;
      case 2: {
        if (tag == 16) {
         parse_price_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_gold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_price_value;
        break;
      }

      // optional uint32 price_value = 3;
      case 3: {
        if (tag == 24) {
         parse_price_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JX.GoodsInfo.Price)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JX.GoodsInfo.Price)
  return false;
#undef DO_
}

void GoodsInfo_Price::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JX.GoodsInfo.Price)
  // optional uint32 price_dq = 1;
  if (this->price_dq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->price_dq(), output);
  }

  // optional uint32 price_gold = 2;
  if (this->price_gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price_gold(), output);
  }

  // optional uint32 price_value = 3;
  if (this->price_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->price_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:JX.GoodsInfo.Price)
}

::google::protobuf::uint8* GoodsInfo_Price::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JX.GoodsInfo.Price)
  // optional uint32 price_dq = 1;
  if (this->price_dq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->price_dq(), target);
  }

  // optional uint32 price_gold = 2;
  if (this->price_gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price_gold(), target);
  }

  // optional uint32 price_value = 3;
  if (this->price_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->price_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:JX.GoodsInfo.Price)
  return target;
}

int GoodsInfo_Price::ByteSize() const {
  int total_size = 0;

  // optional uint32 price_dq = 1;
  if (this->price_dq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_dq());
  }

  // optional uint32 price_gold = 2;
  if (this->price_gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_gold());
  }

  // optional uint32 price_value = 3;
  if (this->price_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsInfo_Price::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GoodsInfo_Price* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GoodsInfo_Price>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GoodsInfo_Price::MergeFrom(const GoodsInfo_Price& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.price_dq() != 0) {
    set_price_dq(from.price_dq());
  }
  if (from.price_gold() != 0) {
    set_price_gold(from.price_gold());
  }
  if (from.price_value() != 0) {
    set_price_value(from.price_value());
  }
}

void GoodsInfo_Price::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsInfo_Price::CopyFrom(const GoodsInfo_Price& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo_Price::IsInitialized() const {

  return true;
}

void GoodsInfo_Price::Swap(GoodsInfo_Price* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoodsInfo_Price::InternalSwap(GoodsInfo_Price* other) {
  std::swap(price_dq_, other->price_dq_);
  std::swap(price_gold_, other->price_gold_);
  std::swap(price_value_, other->price_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoodsInfo_Price::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoodsInfo_Price_descriptor_;
  metadata.reflection = GoodsInfo_Price_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoodsInfo_GoodsAttr::kAttrTypeFieldNumber;
const int GoodsInfo_GoodsAttr::kAttrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoodsInfo_GoodsAttr::GoodsInfo_GoodsAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JX.GoodsInfo.GoodsAttr)
}

void GoodsInfo_GoodsAttr::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GoodsInfo_GoodsAttr::GoodsInfo_GoodsAttr(const GoodsInfo_GoodsAttr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:JX.GoodsInfo.GoodsAttr)
}

void GoodsInfo_GoodsAttr::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  attr_type_ = 0u;
  attr_value_ = 0u;
}

GoodsInfo_GoodsAttr::~GoodsInfo_GoodsAttr() {
  // @@protoc_insertion_point(destructor:JX.GoodsInfo.GoodsAttr)
  SharedDtor();
}

void GoodsInfo_GoodsAttr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GoodsInfo_GoodsAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsInfo_GoodsAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoodsInfo_GoodsAttr_descriptor_;
}

const GoodsInfo_GoodsAttr& GoodsInfo_GoodsAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GoodsInfo_2eproto();
  return *default_instance_;
}

GoodsInfo_GoodsAttr* GoodsInfo_GoodsAttr::default_instance_ = NULL;

GoodsInfo_GoodsAttr* GoodsInfo_GoodsAttr::New(::google::protobuf::Arena* arena) const {
  GoodsInfo_GoodsAttr* n = new GoodsInfo_GoodsAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoodsInfo_GoodsAttr::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GoodsInfo_GoodsAttr*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(attr_type_, attr_value_);

#undef ZR_HELPER_
#undef ZR_

}

bool GoodsInfo_GoodsAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JX.GoodsInfo.GoodsAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 attr_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_attr_value;
        break;
      }

      // optional uint32 attr_value = 2;
      case 2: {
        if (tag == 16) {
         parse_attr_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JX.GoodsInfo.GoodsAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JX.GoodsInfo.GoodsAttr)
  return false;
#undef DO_
}

void GoodsInfo_GoodsAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JX.GoodsInfo.GoodsAttr)
  // optional uint32 attr_type = 1;
  if (this->attr_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->attr_type(), output);
  }

  // optional uint32 attr_value = 2;
  if (this->attr_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attr_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:JX.GoodsInfo.GoodsAttr)
}

::google::protobuf::uint8* GoodsInfo_GoodsAttr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JX.GoodsInfo.GoodsAttr)
  // optional uint32 attr_type = 1;
  if (this->attr_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->attr_type(), target);
  }

  // optional uint32 attr_value = 2;
  if (this->attr_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attr_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:JX.GoodsInfo.GoodsAttr)
  return target;
}

int GoodsInfo_GoodsAttr::ByteSize() const {
  int total_size = 0;

  // optional uint32 attr_type = 1;
  if (this->attr_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attr_type());
  }

  // optional uint32 attr_value = 2;
  if (this->attr_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attr_value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsInfo_GoodsAttr::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GoodsInfo_GoodsAttr* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GoodsInfo_GoodsAttr>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GoodsInfo_GoodsAttr::MergeFrom(const GoodsInfo_GoodsAttr& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.attr_type() != 0) {
    set_attr_type(from.attr_type());
  }
  if (from.attr_value() != 0) {
    set_attr_value(from.attr_value());
  }
}

void GoodsInfo_GoodsAttr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsInfo_GoodsAttr::CopyFrom(const GoodsInfo_GoodsAttr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo_GoodsAttr::IsInitialized() const {

  return true;
}

void GoodsInfo_GoodsAttr::Swap(GoodsInfo_GoodsAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoodsInfo_GoodsAttr::InternalSwap(GoodsInfo_GoodsAttr* other) {
  std::swap(attr_type_, other->attr_type_);
  std::swap(attr_value_, other->attr_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoodsInfo_GoodsAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoodsInfo_GoodsAttr_descriptor_;
  metadata.reflection = GoodsInfo_GoodsAttr_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoodsInfo::kGoodsIdFieldNumber;
const int GoodsInfo::kNameFieldNumber;
const int GoodsInfo::kSexFieldNumber;
const int GoodsInfo::kLevelLimitFieldNumber;
const int GoodsInfo::kClubVipLevelFieldNumber;
const int GoodsInfo::kQb2FieldNumber;
const int GoodsInfo::kConsumeTypeFieldNumber;
const int GoodsInfo::kTimeUnitFieldNumber;
const int GoodsInfo::kIsOnlineFieldNumber;
const int GoodsInfo::kCanBuyFieldNumber;
const int GoodsInfo::kCanRechargeFieldNumber;
const int GoodsInfo::kOnlineTimeFieldNumber;
const int GoodsInfo::kOfflineTimeFieldNumber;
const int GoodsInfo::kPrivilegedPlatIdListFieldNumber;
const int GoodsInfo::kPrivilegedPlatIsOnlineFieldNumber;
const int GoodsInfo::kPrivilegedPlatCanBuyFieldNumber;
const int GoodsInfo::kPrivilegedPlatCanRechargeFieldNumber;
const int GoodsInfo::kPaymentTermsFieldNumber;
const int GoodsInfo::kValidTimeFieldNumber;
const int GoodsInfo::kSortPriorityFieldNumber;
const int GoodsInfo::kSuitNumberFieldNumber;
const int GoodsInfo::kBagSortPriorityFieldNumber;
const int GoodsInfo::kStatusFieldNumber;
const int GoodsInfo::kRankFieldNumber;
const int GoodsInfo::kPriceDiscountFieldNumber;
const int GoodsInfo::kVipDiscountFieldNumber;
const int GoodsInfo::kPriceTableFieldNumber;
const int GoodsInfo::kGoodsAttrFieldNumber;
const int GoodsInfo::kDescriptionFieldNumber;
const int GoodsInfo::kLimitIdFieldNumber;
const int GoodsInfo::kSubSystemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoodsInfo::GoodsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JX.GoodsInfo)
}

void GoodsInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GoodsInfo::GoodsInfo(const GoodsInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:JX.GoodsInfo)
}

void GoodsInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  goods_id_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_ = 0u;
  level_limit_ = 0u;
  club_vip_level_ = 0;
  qb_2_ = 0;
  consume_type_ = 0u;
  time_unit_ = 0u;
  is_online_ = 0u;
  can_buy_ = 0u;
  can_recharge_ = 0u;
  online_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  privileged_plat_is_online_ = 0u;
  privileged_plat_can_buy_ = 0u;
  privileged_plat_can_recharge_ = 0u;
  payment_terms_ = 0u;
  valid_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sort_priority_ = 0u;
  suit_number_ = 0;
  bag_sort_priority_ = 0u;
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rank_ = 0u;
  price_discount_ = 0u;
  vip_discount_ = 0u;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limit_id_ = 0u;
  subsystemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GoodsInfo::~GoodsInfo() {
  // @@protoc_insertion_point(destructor:JX.GoodsInfo)
  SharedDtor();
}

void GoodsInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subsystemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GoodsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoodsInfo_descriptor_;
}

const GoodsInfo& GoodsInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GoodsInfo_2eproto();
  return *default_instance_;
}

GoodsInfo* GoodsInfo::default_instance_ = NULL;

GoodsInfo* GoodsInfo::New(::google::protobuf::Arena* arena) const {
  GoodsInfo* n = new GoodsInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoodsInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GoodsInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(goods_id_, time_unit_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(is_online_, can_recharge_);
  ZR_(privileged_plat_is_online_, privileged_plat_can_buy_);
  online_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(privileged_plat_can_recharge_, payment_terms_);
  ZR_(sort_priority_, suit_number_);
  ZR_(bag_sort_priority_, rank_);
  valid_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(price_discount_, vip_discount_);
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limit_id_ = 0u;
  subsystemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  privileged_plat_id_list_.Clear();
  price_table_.Clear();
  goods_attr_.Clear();
}

bool GoodsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JX.GoodsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 goods_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goods_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional bytes name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sex;
        break;
      }

      // optional uint32 sex = 3;
      case 3: {
        if (tag == 24) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_level_limit;
        break;
      }

      // optional uint32 level_limit = 4;
      case 4: {
        if (tag == 32) {
         parse_level_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_limit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_club_vip_level;
        break;
      }

      // optional int32 club_vip_level = 5;
      case 5: {
        if (tag == 40) {
         parse_club_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &club_vip_level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_qb_2;
        break;
      }

      // optional int32 qb_2 = 6;
      case 6: {
        if (tag == 48) {
         parse_qb_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qb_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_consume_type;
        break;
      }

      // optional uint32 consume_type = 7;
      case 7: {
        if (tag == 56) {
         parse_consume_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consume_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_time_unit;
        break;
      }

      // optional uint32 time_unit = 8;
      case 8: {
        if (tag == 64) {
         parse_time_unit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_unit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_is_online;
        break;
      }

      // optional uint32 is_online = 9;
      case 9: {
        if (tag == 72) {
         parse_is_online:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_online_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_can_buy;
        break;
      }

      // optional uint32 can_buy = 10;
      case 10: {
        if (tag == 80) {
         parse_can_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &can_buy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_can_recharge;
        break;
      }

      // optional uint32 can_recharge = 11;
      case 11: {
        if (tag == 88) {
         parse_can_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &can_recharge_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_online_time;
        break;
      }

      // optional bytes online_time = 12;
      case 12: {
        if (tag == 98) {
         parse_online_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_online_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_offline_time;
        break;
      }

      // optional bytes offline_time = 13;
      case 13: {
        if (tag == 106) {
         parse_offline_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_offline_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_privileged_plat_id_list;
        break;
      }

      // repeated uint32 privileged_plat_id_list = 14;
      case 14: {
        if (tag == 114) {
         parse_privileged_plat_id_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_privileged_plat_id_list())));
        } else if (tag == 112) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 114, input, this->mutable_privileged_plat_id_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_privileged_plat_is_online;
        break;
      }

      // optional uint32 privileged_plat_is_online = 15;
      case 15: {
        if (tag == 120) {
         parse_privileged_plat_is_online:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_is_online_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_privileged_plat_can_buy;
        break;
      }

      // optional uint32 privileged_plat_can_buy = 16;
      case 16: {
        if (tag == 128) {
         parse_privileged_plat_can_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_can_buy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_privileged_plat_can_recharge;
        break;
      }

      // optional uint32 privileged_plat_can_recharge = 17;
      case 17: {
        if (tag == 136) {
         parse_privileged_plat_can_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_can_recharge_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_payment_terms;
        break;
      }

      // optional uint32 payment_terms = 18;
      case 18: {
        if (tag == 144) {
         parse_payment_terms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payment_terms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_valid_time;
        break;
      }

      // optional bytes valid_time = 19;
      case 19: {
        if (tag == 154) {
         parse_valid_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_valid_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_sort_priority;
        break;
      }

      // optional uint32 sort_priority = 20;
      case 20: {
        if (tag == 160) {
         parse_sort_priority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_priority_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_suit_number;
        break;
      }

      // optional int32 suit_number = 21;
      case 21: {
        if (tag == 168) {
         parse_suit_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_number_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_bag_sort_priority;
        break;
      }

      // optional uint32 bag_sort_priority = 22;
      case 22: {
        if (tag == 176) {
         parse_bag_sort_priority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bag_sort_priority_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_status;
        break;
      }

      // optional bytes status = 23;
      case 23: {
        if (tag == 186) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_rank;
        break;
      }

      // optional uint32 rank = 24;
      case 24: {
        if (tag == 192) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_price_discount;
        break;
      }

      // optional uint32 price_discount = 25;
      case 25: {
        if (tag == 200) {
         parse_price_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_discount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_vip_discount;
        break;
      }

      // optional uint32 vip_discount = 26;
      case 26: {
        if (tag == 208) {
         parse_vip_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vip_discount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_price_table;
        break;
      }

      // repeated .JX.GoodsInfo.Price price_table = 27;
      case 27: {
        if (tag == 218) {
         parse_price_table:
          DO_(input->IncrementRecursionDepth());
         parse_loop_price_table:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_price_table()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_loop_price_table;
        if (input->ExpectTag(226)) goto parse_loop_goods_attr;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .JX.GoodsInfo.GoodsAttr goods_attr = 28;
      case 28: {
        if (tag == 226) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_goods_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_goods_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_loop_goods_attr;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(234)) goto parse_description;
        break;
      }

      // optional bytes description = 29;
      case 29: {
        if (tag == 234) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_limit_id;
        break;
      }

      // optional uint32 limit_id = 30;
      case 30: {
        if (tag == 240) {
         parse_limit_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_subSystemId;
        break;
      }

      // optional bytes subSystemId = 31;
      case 31: {
        if (tag == 250) {
         parse_subSystemId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_subsystemid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JX.GoodsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JX.GoodsInfo)
  return false;
#undef DO_
}

void GoodsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JX.GoodsInfo)
  // optional uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goods_id(), output);
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 sex = 3;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sex(), output);
  }

  // optional uint32 level_limit = 4;
  if (this->level_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level_limit(), output);
  }

  // optional int32 club_vip_level = 5;
  if (this->club_vip_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->club_vip_level(), output);
  }

  // optional int32 qb_2 = 6;
  if (this->qb_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qb_2(), output);
  }

  // optional uint32 consume_type = 7;
  if (this->consume_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->consume_type(), output);
  }

  // optional uint32 time_unit = 8;
  if (this->time_unit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->time_unit(), output);
  }

  // optional uint32 is_online = 9;
  if (this->is_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->is_online(), output);
  }

  // optional uint32 can_buy = 10;
  if (this->can_buy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->can_buy(), output);
  }

  // optional uint32 can_recharge = 11;
  if (this->can_recharge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->can_recharge(), output);
  }

  // optional bytes online_time = 12;
  if (this->online_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->online_time(), output);
  }

  // optional bytes offline_time = 13;
  if (this->offline_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->offline_time(), output);
  }

  // repeated uint32 privileged_plat_id_list = 14;
  if (this->privileged_plat_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_privileged_plat_id_list_cached_byte_size_);
  }
  for (int i = 0; i < this->privileged_plat_id_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->privileged_plat_id_list(i), output);
  }

  // optional uint32 privileged_plat_is_online = 15;
  if (this->privileged_plat_is_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->privileged_plat_is_online(), output);
  }

  // optional uint32 privileged_plat_can_buy = 16;
  if (this->privileged_plat_can_buy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->privileged_plat_can_buy(), output);
  }

  // optional uint32 privileged_plat_can_recharge = 17;
  if (this->privileged_plat_can_recharge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->privileged_plat_can_recharge(), output);
  }

  // optional uint32 payment_terms = 18;
  if (this->payment_terms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->payment_terms(), output);
  }

  // optional bytes valid_time = 19;
  if (this->valid_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      19, this->valid_time(), output);
  }

  // optional uint32 sort_priority = 20;
  if (this->sort_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->sort_priority(), output);
  }

  // optional int32 suit_number = 21;
  if (this->suit_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->suit_number(), output);
  }

  // optional uint32 bag_sort_priority = 22;
  if (this->bag_sort_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->bag_sort_priority(), output);
  }

  // optional bytes status = 23;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->status(), output);
  }

  // optional uint32 rank = 24;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->rank(), output);
  }

  // optional uint32 price_discount = 25;
  if (this->price_discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->price_discount(), output);
  }

  // optional uint32 vip_discount = 26;
  if (this->vip_discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->vip_discount(), output);
  }

  // repeated .JX.GoodsInfo.Price price_table = 27;
  for (unsigned int i = 0, n = this->price_table_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->price_table(i), output);
  }

  // repeated .JX.GoodsInfo.GoodsAttr goods_attr = 28;
  for (unsigned int i = 0, n = this->goods_attr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->goods_attr(i), output);
  }

  // optional bytes description = 29;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      29, this->description(), output);
  }

  // optional uint32 limit_id = 30;
  if (this->limit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->limit_id(), output);
  }

  // optional bytes subSystemId = 31;
  if (this->subsystemid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      31, this->subsystemid(), output);
  }

  // @@protoc_insertion_point(serialize_end:JX.GoodsInfo)
}

::google::protobuf::uint8* GoodsInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JX.GoodsInfo)
  // optional uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goods_id(), target);
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // optional uint32 sex = 3;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sex(), target);
  }

  // optional uint32 level_limit = 4;
  if (this->level_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level_limit(), target);
  }

  // optional int32 club_vip_level = 5;
  if (this->club_vip_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->club_vip_level(), target);
  }

  // optional int32 qb_2 = 6;
  if (this->qb_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qb_2(), target);
  }

  // optional uint32 consume_type = 7;
  if (this->consume_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->consume_type(), target);
  }

  // optional uint32 time_unit = 8;
  if (this->time_unit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->time_unit(), target);
  }

  // optional uint32 is_online = 9;
  if (this->is_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->is_online(), target);
  }

  // optional uint32 can_buy = 10;
  if (this->can_buy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->can_buy(), target);
  }

  // optional uint32 can_recharge = 11;
  if (this->can_recharge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->can_recharge(), target);
  }

  // optional bytes online_time = 12;
  if (this->online_time().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->online_time(), target);
  }

  // optional bytes offline_time = 13;
  if (this->offline_time().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->offline_time(), target);
  }

  // repeated uint32 privileged_plat_id_list = 14;
  if (this->privileged_plat_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _privileged_plat_id_list_cached_byte_size_, target);
  }
  for (int i = 0; i < this->privileged_plat_id_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->privileged_plat_id_list(i), target);
  }

  // optional uint32 privileged_plat_is_online = 15;
  if (this->privileged_plat_is_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->privileged_plat_is_online(), target);
  }

  // optional uint32 privileged_plat_can_buy = 16;
  if (this->privileged_plat_can_buy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->privileged_plat_can_buy(), target);
  }

  // optional uint32 privileged_plat_can_recharge = 17;
  if (this->privileged_plat_can_recharge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->privileged_plat_can_recharge(), target);
  }

  // optional uint32 payment_terms = 18;
  if (this->payment_terms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->payment_terms(), target);
  }

  // optional bytes valid_time = 19;
  if (this->valid_time().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        19, this->valid_time(), target);
  }

  // optional uint32 sort_priority = 20;
  if (this->sort_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->sort_priority(), target);
  }

  // optional int32 suit_number = 21;
  if (this->suit_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->suit_number(), target);
  }

  // optional uint32 bag_sort_priority = 22;
  if (this->bag_sort_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->bag_sort_priority(), target);
  }

  // optional bytes status = 23;
  if (this->status().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->status(), target);
  }

  // optional uint32 rank = 24;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->rank(), target);
  }

  // optional uint32 price_discount = 25;
  if (this->price_discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->price_discount(), target);
  }

  // optional uint32 vip_discount = 26;
  if (this->vip_discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->vip_discount(), target);
  }

  // repeated .JX.GoodsInfo.Price price_table = 27;
  for (unsigned int i = 0, n = this->price_table_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->price_table(i), target);
  }

  // repeated .JX.GoodsInfo.GoodsAttr goods_attr = 28;
  for (unsigned int i = 0, n = this->goods_attr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->goods_attr(i), target);
  }

  // optional bytes description = 29;
  if (this->description().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        29, this->description(), target);
  }

  // optional uint32 limit_id = 30;
  if (this->limit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->limit_id(), target);
  }

  // optional bytes subSystemId = 31;
  if (this->subsystemid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        31, this->subsystemid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:JX.GoodsInfo)
  return target;
}

int GoodsInfo::ByteSize() const {
  int total_size = 0;

  // optional uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goods_id());
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // optional uint32 sex = 3;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // optional uint32 level_limit = 4;
  if (this->level_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level_limit());
  }

  // optional int32 club_vip_level = 5;
  if (this->club_vip_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->club_vip_level());
  }

  // optional int32 qb_2 = 6;
  if (this->qb_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->qb_2());
  }

  // optional uint32 consume_type = 7;
  if (this->consume_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->consume_type());
  }

  // optional uint32 time_unit = 8;
  if (this->time_unit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time_unit());
  }

  // optional uint32 is_online = 9;
  if (this->is_online() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_online());
  }

  // optional uint32 can_buy = 10;
  if (this->can_buy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->can_buy());
  }

  // optional uint32 can_recharge = 11;
  if (this->can_recharge() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->can_recharge());
  }

  // optional bytes online_time = 12;
  if (this->online_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->online_time());
  }

  // optional bytes offline_time = 13;
  if (this->offline_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->offline_time());
  }

  // optional uint32 privileged_plat_is_online = 15;
  if (this->privileged_plat_is_online() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->privileged_plat_is_online());
  }

  // optional uint32 privileged_plat_can_buy = 16;
  if (this->privileged_plat_can_buy() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->privileged_plat_can_buy());
  }

  // optional uint32 privileged_plat_can_recharge = 17;
  if (this->privileged_plat_can_recharge() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->privileged_plat_can_recharge());
  }

  // optional uint32 payment_terms = 18;
  if (this->payment_terms() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->payment_terms());
  }

  // optional bytes valid_time = 19;
  if (this->valid_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->valid_time());
  }

  // optional uint32 sort_priority = 20;
  if (this->sort_priority() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sort_priority());
  }

  // optional int32 suit_number = 21;
  if (this->suit_number() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_number());
  }

  // optional uint32 bag_sort_priority = 22;
  if (this->bag_sort_priority() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bag_sort_priority());
  }

  // optional bytes status = 23;
  if (this->status().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->status());
  }

  // optional uint32 rank = 24;
  if (this->rank() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rank());
  }

  // optional uint32 price_discount = 25;
  if (this->price_discount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_discount());
  }

  // optional uint32 vip_discount = 26;
  if (this->vip_discount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vip_discount());
  }

  // optional bytes description = 29;
  if (this->description().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->description());
  }

  // optional uint32 limit_id = 30;
  if (this->limit_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit_id());
  }

  // optional bytes subSystemId = 31;
  if (this->subsystemid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->subsystemid());
  }

  // repeated uint32 privileged_plat_id_list = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->privileged_plat_id_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->privileged_plat_id_list(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _privileged_plat_id_list_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .JX.GoodsInfo.Price price_table = 27;
  total_size += 2 * this->price_table_size();
  for (int i = 0; i < this->price_table_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->price_table(i));
  }

  // repeated .JX.GoodsInfo.GoodsAttr goods_attr = 28;
  total_size += 2 * this->goods_attr_size();
  for (int i = 0; i < this->goods_attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_attr(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GoodsInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GoodsInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GoodsInfo::MergeFrom(const GoodsInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  privileged_plat_id_list_.MergeFrom(from.privileged_plat_id_list_);
  price_table_.MergeFrom(from.price_table_);
  goods_attr_.MergeFrom(from.goods_attr_);
  if (from.goods_id() != 0) {
    set_goods_id(from.goods_id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.level_limit() != 0) {
    set_level_limit(from.level_limit());
  }
  if (from.club_vip_level() != 0) {
    set_club_vip_level(from.club_vip_level());
  }
  if (from.qb_2() != 0) {
    set_qb_2(from.qb_2());
  }
  if (from.consume_type() != 0) {
    set_consume_type(from.consume_type());
  }
  if (from.time_unit() != 0) {
    set_time_unit(from.time_unit());
  }
  if (from.is_online() != 0) {
    set_is_online(from.is_online());
  }
  if (from.can_buy() != 0) {
    set_can_buy(from.can_buy());
  }
  if (from.can_recharge() != 0) {
    set_can_recharge(from.can_recharge());
  }
  if (from.online_time().size() > 0) {

    online_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_time_);
  }
  if (from.offline_time().size() > 0) {

    offline_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offline_time_);
  }
  if (from.privileged_plat_is_online() != 0) {
    set_privileged_plat_is_online(from.privileged_plat_is_online());
  }
  if (from.privileged_plat_can_buy() != 0) {
    set_privileged_plat_can_buy(from.privileged_plat_can_buy());
  }
  if (from.privileged_plat_can_recharge() != 0) {
    set_privileged_plat_can_recharge(from.privileged_plat_can_recharge());
  }
  if (from.payment_terms() != 0) {
    set_payment_terms(from.payment_terms());
  }
  if (from.valid_time().size() > 0) {

    valid_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_time_);
  }
  if (from.sort_priority() != 0) {
    set_sort_priority(from.sort_priority());
  }
  if (from.suit_number() != 0) {
    set_suit_number(from.suit_number());
  }
  if (from.bag_sort_priority() != 0) {
    set_bag_sort_priority(from.bag_sort_priority());
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.price_discount() != 0) {
    set_price_discount(from.price_discount());
  }
  if (from.vip_discount() != 0) {
    set_vip_discount(from.vip_discount());
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.limit_id() != 0) {
    set_limit_id(from.limit_id());
  }
  if (from.subsystemid().size() > 0) {

    subsystemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subsystemid_);
  }
}

void GoodsInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsInfo::CopyFrom(const GoodsInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo::IsInitialized() const {

  return true;
}

void GoodsInfo::Swap(GoodsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoodsInfo::InternalSwap(GoodsInfo* other) {
  std::swap(goods_id_, other->goods_id_);
  name_.Swap(&other->name_);
  std::swap(sex_, other->sex_);
  std::swap(level_limit_, other->level_limit_);
  std::swap(club_vip_level_, other->club_vip_level_);
  std::swap(qb_2_, other->qb_2_);
  std::swap(consume_type_, other->consume_type_);
  std::swap(time_unit_, other->time_unit_);
  std::swap(is_online_, other->is_online_);
  std::swap(can_buy_, other->can_buy_);
  std::swap(can_recharge_, other->can_recharge_);
  online_time_.Swap(&other->online_time_);
  offline_time_.Swap(&other->offline_time_);
  privileged_plat_id_list_.UnsafeArenaSwap(&other->privileged_plat_id_list_);
  std::swap(privileged_plat_is_online_, other->privileged_plat_is_online_);
  std::swap(privileged_plat_can_buy_, other->privileged_plat_can_buy_);
  std::swap(privileged_plat_can_recharge_, other->privileged_plat_can_recharge_);
  std::swap(payment_terms_, other->payment_terms_);
  valid_time_.Swap(&other->valid_time_);
  std::swap(sort_priority_, other->sort_priority_);
  std::swap(suit_number_, other->suit_number_);
  std::swap(bag_sort_priority_, other->bag_sort_priority_);
  status_.Swap(&other->status_);
  std::swap(rank_, other->rank_);
  std::swap(price_discount_, other->price_discount_);
  std::swap(vip_discount_, other->vip_discount_);
  price_table_.UnsafeArenaSwap(&other->price_table_);
  goods_attr_.UnsafeArenaSwap(&other->goods_attr_);
  description_.Swap(&other->description_);
  std::swap(limit_id_, other->limit_id_);
  subsystemid_.Swap(&other->subsystemid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoodsInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoodsInfo_descriptor_;
  metadata.reflection = GoodsInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GoodsInfo_Price

// optional uint32 price_dq = 1;
void GoodsInfo_Price::clear_price_dq() {
  price_dq_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo_Price::price_dq() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.Price.price_dq)
  return price_dq_;
}
 void GoodsInfo_Price::set_price_dq(::google::protobuf::uint32 value) {
  
  price_dq_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.Price.price_dq)
}

// optional uint32 price_gold = 2;
void GoodsInfo_Price::clear_price_gold() {
  price_gold_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo_Price::price_gold() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.Price.price_gold)
  return price_gold_;
}
 void GoodsInfo_Price::set_price_gold(::google::protobuf::uint32 value) {
  
  price_gold_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.Price.price_gold)
}

// optional uint32 price_value = 3;
void GoodsInfo_Price::clear_price_value() {
  price_value_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo_Price::price_value() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.Price.price_value)
  return price_value_;
}
 void GoodsInfo_Price::set_price_value(::google::protobuf::uint32 value) {
  
  price_value_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.Price.price_value)
}

// -------------------------------------------------------------------

// GoodsInfo_GoodsAttr

// optional uint32 attr_type = 1;
void GoodsInfo_GoodsAttr::clear_attr_type() {
  attr_type_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo_GoodsAttr::attr_type() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.GoodsAttr.attr_type)
  return attr_type_;
}
 void GoodsInfo_GoodsAttr::set_attr_type(::google::protobuf::uint32 value) {
  
  attr_type_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.GoodsAttr.attr_type)
}

// optional uint32 attr_value = 2;
void GoodsInfo_GoodsAttr::clear_attr_value() {
  attr_value_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo_GoodsAttr::attr_value() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.GoodsAttr.attr_value)
  return attr_value_;
}
 void GoodsInfo_GoodsAttr::set_attr_value(::google::protobuf::uint32 value) {
  
  attr_value_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.GoodsAttr.attr_value)
}

// -------------------------------------------------------------------

// GoodsInfo

// optional uint32 goods_id = 1;
void GoodsInfo::clear_goods_id() {
  goods_id_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::goods_id() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.goods_id)
  return goods_id_;
}
 void GoodsInfo::set_goods_id(::google::protobuf::uint32 value) {
  
  goods_id_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.goods_id)
}

// optional bytes name = 2;
void GoodsInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GoodsInfo::name() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.name)
}
 void GoodsInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JX.GoodsInfo.name)
}
 void GoodsInfo::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JX.GoodsInfo.name)
}
 ::std::string* GoodsInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:JX.GoodsInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GoodsInfo::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:JX.GoodsInfo.name)
}

// optional uint32 sex = 3;
void GoodsInfo::clear_sex() {
  sex_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::sex() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.sex)
  return sex_;
}
 void GoodsInfo::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.sex)
}

// optional uint32 level_limit = 4;
void GoodsInfo::clear_level_limit() {
  level_limit_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::level_limit() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.level_limit)
  return level_limit_;
}
 void GoodsInfo::set_level_limit(::google::protobuf::uint32 value) {
  
  level_limit_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.level_limit)
}

// optional int32 club_vip_level = 5;
void GoodsInfo::clear_club_vip_level() {
  club_vip_level_ = 0;
}
 ::google::protobuf::int32 GoodsInfo::club_vip_level() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.club_vip_level)
  return club_vip_level_;
}
 void GoodsInfo::set_club_vip_level(::google::protobuf::int32 value) {
  
  club_vip_level_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.club_vip_level)
}

// optional int32 qb_2 = 6;
void GoodsInfo::clear_qb_2() {
  qb_2_ = 0;
}
 ::google::protobuf::int32 GoodsInfo::qb_2() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.qb_2)
  return qb_2_;
}
 void GoodsInfo::set_qb_2(::google::protobuf::int32 value) {
  
  qb_2_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.qb_2)
}

// optional uint32 consume_type = 7;
void GoodsInfo::clear_consume_type() {
  consume_type_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::consume_type() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.consume_type)
  return consume_type_;
}
 void GoodsInfo::set_consume_type(::google::protobuf::uint32 value) {
  
  consume_type_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.consume_type)
}

// optional uint32 time_unit = 8;
void GoodsInfo::clear_time_unit() {
  time_unit_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::time_unit() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.time_unit)
  return time_unit_;
}
 void GoodsInfo::set_time_unit(::google::protobuf::uint32 value) {
  
  time_unit_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.time_unit)
}

// optional uint32 is_online = 9;
void GoodsInfo::clear_is_online() {
  is_online_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::is_online() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.is_online)
  return is_online_;
}
 void GoodsInfo::set_is_online(::google::protobuf::uint32 value) {
  
  is_online_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.is_online)
}

// optional uint32 can_buy = 10;
void GoodsInfo::clear_can_buy() {
  can_buy_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::can_buy() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.can_buy)
  return can_buy_;
}
 void GoodsInfo::set_can_buy(::google::protobuf::uint32 value) {
  
  can_buy_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.can_buy)
}

// optional uint32 can_recharge = 11;
void GoodsInfo::clear_can_recharge() {
  can_recharge_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::can_recharge() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.can_recharge)
  return can_recharge_;
}
 void GoodsInfo::set_can_recharge(::google::protobuf::uint32 value) {
  
  can_recharge_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.can_recharge)
}

// optional bytes online_time = 12;
void GoodsInfo::clear_online_time() {
  online_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GoodsInfo::online_time() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.online_time)
  return online_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_online_time(const ::std::string& value) {
  
  online_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.online_time)
}
 void GoodsInfo::set_online_time(const char* value) {
  
  online_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JX.GoodsInfo.online_time)
}
 void GoodsInfo::set_online_time(const void* value, size_t size) {
  
  online_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JX.GoodsInfo.online_time)
}
 ::std::string* GoodsInfo::mutable_online_time() {
  
  // @@protoc_insertion_point(field_mutable:JX.GoodsInfo.online_time)
  return online_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GoodsInfo::release_online_time() {
  
  return online_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_allocated_online_time(::std::string* online_time) {
  if (online_time != NULL) {
    
  } else {
    
  }
  online_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_time);
  // @@protoc_insertion_point(field_set_allocated:JX.GoodsInfo.online_time)
}

// optional bytes offline_time = 13;
void GoodsInfo::clear_offline_time() {
  offline_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GoodsInfo::offline_time() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.offline_time)
  return offline_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_offline_time(const ::std::string& value) {
  
  offline_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.offline_time)
}
 void GoodsInfo::set_offline_time(const char* value) {
  
  offline_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JX.GoodsInfo.offline_time)
}
 void GoodsInfo::set_offline_time(const void* value, size_t size) {
  
  offline_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JX.GoodsInfo.offline_time)
}
 ::std::string* GoodsInfo::mutable_offline_time() {
  
  // @@protoc_insertion_point(field_mutable:JX.GoodsInfo.offline_time)
  return offline_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GoodsInfo::release_offline_time() {
  
  return offline_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_allocated_offline_time(::std::string* offline_time) {
  if (offline_time != NULL) {
    
  } else {
    
  }
  offline_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offline_time);
  // @@protoc_insertion_point(field_set_allocated:JX.GoodsInfo.offline_time)
}

// repeated uint32 privileged_plat_id_list = 14;
int GoodsInfo::privileged_plat_id_list_size() const {
  return privileged_plat_id_list_.size();
}
void GoodsInfo::clear_privileged_plat_id_list() {
  privileged_plat_id_list_.Clear();
}
 ::google::protobuf::uint32 GoodsInfo::privileged_plat_id_list(int index) const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.privileged_plat_id_list)
  return privileged_plat_id_list_.Get(index);
}
 void GoodsInfo::set_privileged_plat_id_list(int index, ::google::protobuf::uint32 value) {
  privileged_plat_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.privileged_plat_id_list)
}
 void GoodsInfo::add_privileged_plat_id_list(::google::protobuf::uint32 value) {
  privileged_plat_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:JX.GoodsInfo.privileged_plat_id_list)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GoodsInfo::privileged_plat_id_list() const {
  // @@protoc_insertion_point(field_list:JX.GoodsInfo.privileged_plat_id_list)
  return privileged_plat_id_list_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GoodsInfo::mutable_privileged_plat_id_list() {
  // @@protoc_insertion_point(field_mutable_list:JX.GoodsInfo.privileged_plat_id_list)
  return &privileged_plat_id_list_;
}

// optional uint32 privileged_plat_is_online = 15;
void GoodsInfo::clear_privileged_plat_is_online() {
  privileged_plat_is_online_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::privileged_plat_is_online() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.privileged_plat_is_online)
  return privileged_plat_is_online_;
}
 void GoodsInfo::set_privileged_plat_is_online(::google::protobuf::uint32 value) {
  
  privileged_plat_is_online_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.privileged_plat_is_online)
}

// optional uint32 privileged_plat_can_buy = 16;
void GoodsInfo::clear_privileged_plat_can_buy() {
  privileged_plat_can_buy_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::privileged_plat_can_buy() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.privileged_plat_can_buy)
  return privileged_plat_can_buy_;
}
 void GoodsInfo::set_privileged_plat_can_buy(::google::protobuf::uint32 value) {
  
  privileged_plat_can_buy_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.privileged_plat_can_buy)
}

// optional uint32 privileged_plat_can_recharge = 17;
void GoodsInfo::clear_privileged_plat_can_recharge() {
  privileged_plat_can_recharge_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::privileged_plat_can_recharge() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.privileged_plat_can_recharge)
  return privileged_plat_can_recharge_;
}
 void GoodsInfo::set_privileged_plat_can_recharge(::google::protobuf::uint32 value) {
  
  privileged_plat_can_recharge_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.privileged_plat_can_recharge)
}

// optional uint32 payment_terms = 18;
void GoodsInfo::clear_payment_terms() {
  payment_terms_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::payment_terms() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.payment_terms)
  return payment_terms_;
}
 void GoodsInfo::set_payment_terms(::google::protobuf::uint32 value) {
  
  payment_terms_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.payment_terms)
}

// optional bytes valid_time = 19;
void GoodsInfo::clear_valid_time() {
  valid_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GoodsInfo::valid_time() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.valid_time)
  return valid_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_valid_time(const ::std::string& value) {
  
  valid_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.valid_time)
}
 void GoodsInfo::set_valid_time(const char* value) {
  
  valid_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JX.GoodsInfo.valid_time)
}
 void GoodsInfo::set_valid_time(const void* value, size_t size) {
  
  valid_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JX.GoodsInfo.valid_time)
}
 ::std::string* GoodsInfo::mutable_valid_time() {
  
  // @@protoc_insertion_point(field_mutable:JX.GoodsInfo.valid_time)
  return valid_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GoodsInfo::release_valid_time() {
  
  return valid_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_allocated_valid_time(::std::string* valid_time) {
  if (valid_time != NULL) {
    
  } else {
    
  }
  valid_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valid_time);
  // @@protoc_insertion_point(field_set_allocated:JX.GoodsInfo.valid_time)
}

// optional uint32 sort_priority = 20;
void GoodsInfo::clear_sort_priority() {
  sort_priority_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::sort_priority() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.sort_priority)
  return sort_priority_;
}
 void GoodsInfo::set_sort_priority(::google::protobuf::uint32 value) {
  
  sort_priority_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.sort_priority)
}

// optional int32 suit_number = 21;
void GoodsInfo::clear_suit_number() {
  suit_number_ = 0;
}
 ::google::protobuf::int32 GoodsInfo::suit_number() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.suit_number)
  return suit_number_;
}
 void GoodsInfo::set_suit_number(::google::protobuf::int32 value) {
  
  suit_number_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.suit_number)
}

// optional uint32 bag_sort_priority = 22;
void GoodsInfo::clear_bag_sort_priority() {
  bag_sort_priority_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::bag_sort_priority() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.bag_sort_priority)
  return bag_sort_priority_;
}
 void GoodsInfo::set_bag_sort_priority(::google::protobuf::uint32 value) {
  
  bag_sort_priority_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.bag_sort_priority)
}

// optional bytes status = 23;
void GoodsInfo::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GoodsInfo::status() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.status)
}
 void GoodsInfo::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JX.GoodsInfo.status)
}
 void GoodsInfo::set_status(const void* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JX.GoodsInfo.status)
}
 ::std::string* GoodsInfo::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:JX.GoodsInfo.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GoodsInfo::release_status() {
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:JX.GoodsInfo.status)
}

// optional uint32 rank = 24;
void GoodsInfo::clear_rank() {
  rank_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::rank() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.rank)
  return rank_;
}
 void GoodsInfo::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.rank)
}

// optional uint32 price_discount = 25;
void GoodsInfo::clear_price_discount() {
  price_discount_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::price_discount() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.price_discount)
  return price_discount_;
}
 void GoodsInfo::set_price_discount(::google::protobuf::uint32 value) {
  
  price_discount_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.price_discount)
}

// optional uint32 vip_discount = 26;
void GoodsInfo::clear_vip_discount() {
  vip_discount_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::vip_discount() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.vip_discount)
  return vip_discount_;
}
 void GoodsInfo::set_vip_discount(::google::protobuf::uint32 value) {
  
  vip_discount_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.vip_discount)
}

// repeated .JX.GoodsInfo.Price price_table = 27;
int GoodsInfo::price_table_size() const {
  return price_table_.size();
}
void GoodsInfo::clear_price_table() {
  price_table_.Clear();
}
const ::JX::GoodsInfo_Price& GoodsInfo::price_table(int index) const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.price_table)
  return price_table_.Get(index);
}
::JX::GoodsInfo_Price* GoodsInfo::mutable_price_table(int index) {
  // @@protoc_insertion_point(field_mutable:JX.GoodsInfo.price_table)
  return price_table_.Mutable(index);
}
::JX::GoodsInfo_Price* GoodsInfo::add_price_table() {
  // @@protoc_insertion_point(field_add:JX.GoodsInfo.price_table)
  return price_table_.Add();
}
::google::protobuf::RepeatedPtrField< ::JX::GoodsInfo_Price >*
GoodsInfo::mutable_price_table() {
  // @@protoc_insertion_point(field_mutable_list:JX.GoodsInfo.price_table)
  return &price_table_;
}
const ::google::protobuf::RepeatedPtrField< ::JX::GoodsInfo_Price >&
GoodsInfo::price_table() const {
  // @@protoc_insertion_point(field_list:JX.GoodsInfo.price_table)
  return price_table_;
}

// repeated .JX.GoodsInfo.GoodsAttr goods_attr = 28;
int GoodsInfo::goods_attr_size() const {
  return goods_attr_.size();
}
void GoodsInfo::clear_goods_attr() {
  goods_attr_.Clear();
}
const ::JX::GoodsInfo_GoodsAttr& GoodsInfo::goods_attr(int index) const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.goods_attr)
  return goods_attr_.Get(index);
}
::JX::GoodsInfo_GoodsAttr* GoodsInfo::mutable_goods_attr(int index) {
  // @@protoc_insertion_point(field_mutable:JX.GoodsInfo.goods_attr)
  return goods_attr_.Mutable(index);
}
::JX::GoodsInfo_GoodsAttr* GoodsInfo::add_goods_attr() {
  // @@protoc_insertion_point(field_add:JX.GoodsInfo.goods_attr)
  return goods_attr_.Add();
}
::google::protobuf::RepeatedPtrField< ::JX::GoodsInfo_GoodsAttr >*
GoodsInfo::mutable_goods_attr() {
  // @@protoc_insertion_point(field_mutable_list:JX.GoodsInfo.goods_attr)
  return &goods_attr_;
}
const ::google::protobuf::RepeatedPtrField< ::JX::GoodsInfo_GoodsAttr >&
GoodsInfo::goods_attr() const {
  // @@protoc_insertion_point(field_list:JX.GoodsInfo.goods_attr)
  return goods_attr_;
}

// optional bytes description = 29;
void GoodsInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GoodsInfo::description() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.description)
}
 void GoodsInfo::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JX.GoodsInfo.description)
}
 void GoodsInfo::set_description(const void* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JX.GoodsInfo.description)
}
 ::std::string* GoodsInfo::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:JX.GoodsInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GoodsInfo::release_description() {
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:JX.GoodsInfo.description)
}

// optional uint32 limit_id = 30;
void GoodsInfo::clear_limit_id() {
  limit_id_ = 0u;
}
 ::google::protobuf::uint32 GoodsInfo::limit_id() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.limit_id)
  return limit_id_;
}
 void GoodsInfo::set_limit_id(::google::protobuf::uint32 value) {
  
  limit_id_ = value;
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.limit_id)
}

// optional bytes subSystemId = 31;
void GoodsInfo::clear_subsystemid() {
  subsystemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GoodsInfo::subsystemid() const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo.subSystemId)
  return subsystemid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_subsystemid(const ::std::string& value) {
  
  subsystemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JX.GoodsInfo.subSystemId)
}
 void GoodsInfo::set_subsystemid(const char* value) {
  
  subsystemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JX.GoodsInfo.subSystemId)
}
 void GoodsInfo::set_subsystemid(const void* value, size_t size) {
  
  subsystemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JX.GoodsInfo.subSystemId)
}
 ::std::string* GoodsInfo::mutable_subsystemid() {
  
  // @@protoc_insertion_point(field_mutable:JX.GoodsInfo.subSystemId)
  return subsystemid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GoodsInfo::release_subsystemid() {
  
  return subsystemid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoodsInfo::set_allocated_subsystemid(::std::string* subsystemid) {
  if (subsystemid != NULL) {
    
  } else {
    
  }
  subsystemid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subsystemid);
  // @@protoc_insertion_point(field_set_allocated:JX.GoodsInfo.subSystemId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoodsInfo_ARRAY::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoodsInfo_ARRAY::GoodsInfo_ARRAY()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JX.GoodsInfo_ARRAY)
}

void GoodsInfo_ARRAY::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GoodsInfo_ARRAY::GoodsInfo_ARRAY(const GoodsInfo_ARRAY& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:JX.GoodsInfo_ARRAY)
}

void GoodsInfo_ARRAY::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

GoodsInfo_ARRAY::~GoodsInfo_ARRAY() {
  // @@protoc_insertion_point(destructor:JX.GoodsInfo_ARRAY)
  SharedDtor();
}

void GoodsInfo_ARRAY::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GoodsInfo_ARRAY::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsInfo_ARRAY::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoodsInfo_ARRAY_descriptor_;
}

const GoodsInfo_ARRAY& GoodsInfo_ARRAY::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GoodsInfo_2eproto();
  return *default_instance_;
}

GoodsInfo_ARRAY* GoodsInfo_ARRAY::default_instance_ = NULL;

GoodsInfo_ARRAY* GoodsInfo_ARRAY::New(::google::protobuf::Arena* arena) const {
  GoodsInfo_ARRAY* n = new GoodsInfo_ARRAY;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoodsInfo_ARRAY::Clear() {
  items_.Clear();
}

bool GoodsInfo_ARRAY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JX.GoodsInfo_ARRAY)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .JX.GoodsInfo items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JX.GoodsInfo_ARRAY)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JX.GoodsInfo_ARRAY)
  return false;
#undef DO_
}

void GoodsInfo_ARRAY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JX.GoodsInfo_ARRAY)
  // repeated .JX.GoodsInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:JX.GoodsInfo_ARRAY)
}

::google::protobuf::uint8* GoodsInfo_ARRAY::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JX.GoodsInfo_ARRAY)
  // repeated .JX.GoodsInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:JX.GoodsInfo_ARRAY)
  return target;
}

int GoodsInfo_ARRAY::ByteSize() const {
  int total_size = 0;

  // repeated .JX.GoodsInfo items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsInfo_ARRAY::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GoodsInfo_ARRAY* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GoodsInfo_ARRAY>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GoodsInfo_ARRAY::MergeFrom(const GoodsInfo_ARRAY& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  items_.MergeFrom(from.items_);
}

void GoodsInfo_ARRAY::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsInfo_ARRAY::CopyFrom(const GoodsInfo_ARRAY& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo_ARRAY::IsInitialized() const {

  return true;
}

void GoodsInfo_ARRAY::Swap(GoodsInfo_ARRAY* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoodsInfo_ARRAY::InternalSwap(GoodsInfo_ARRAY* other) {
  items_.UnsafeArenaSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoodsInfo_ARRAY::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoodsInfo_ARRAY_descriptor_;
  metadata.reflection = GoodsInfo_ARRAY_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GoodsInfo_ARRAY

// repeated .JX.GoodsInfo items = 1;
int GoodsInfo_ARRAY::items_size() const {
  return items_.size();
}
void GoodsInfo_ARRAY::clear_items() {
  items_.Clear();
}
const ::JX::GoodsInfo& GoodsInfo_ARRAY::items(int index) const {
  // @@protoc_insertion_point(field_get:JX.GoodsInfo_ARRAY.items)
  return items_.Get(index);
}
::JX::GoodsInfo* GoodsInfo_ARRAY::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:JX.GoodsInfo_ARRAY.items)
  return items_.Mutable(index);
}
::JX::GoodsInfo* GoodsInfo_ARRAY::add_items() {
  // @@protoc_insertion_point(field_add:JX.GoodsInfo_ARRAY.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::JX::GoodsInfo >*
GoodsInfo_ARRAY::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:JX.GoodsInfo_ARRAY.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::JX::GoodsInfo >&
GoodsInfo_ARRAY::items() const {
  // @@protoc_insertion_point(field_list:JX.GoodsInfo_ARRAY.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace JX

// @@protoc_insertion_point(global_scope)
