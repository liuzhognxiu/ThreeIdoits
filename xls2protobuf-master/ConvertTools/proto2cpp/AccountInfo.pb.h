// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Author: Jumbo 
// source: AccountInfo.proto

#ifndef PROTOBUF_AccountInfo_2eproto__INCLUDED
#define PROTOBUF_AccountInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace JX {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_AccountInfo_2eproto();
void protobuf_AssignDesc_AccountInfo_2eproto();
void protobuf_ShutdownFile_AccountInfo_2eproto();

class AccountInfo;
class AccountInfo_ARRAY;

// ===================================================================

class AccountInfo : public ::google::protobuf::Message {
 public:
  AccountInfo();
  virtual ~AccountInfo();

  AccountInfo(const AccountInfo& from);

  inline AccountInfo& operator=(const AccountInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountInfo& default_instance();

  void Swap(AccountInfo* other);

  // implements Message ----------------------------------------------

  inline AccountInfo* New() const { return New(NULL); }

  AccountInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountInfo& from);
  void MergeFrom(const AccountInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccountInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:JX.AccountInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AccountInfo_2eproto();
  friend void protobuf_AssignDesc_AccountInfo_2eproto();
  friend void protobuf_ShutdownFile_AccountInfo_2eproto();

  void InitAsDefaultInstance();
  static AccountInfo* default_instance_;
};
// -------------------------------------------------------------------

class AccountInfo_ARRAY : public ::google::protobuf::Message {
 public:
  AccountInfo_ARRAY();
  virtual ~AccountInfo_ARRAY();

  AccountInfo_ARRAY(const AccountInfo_ARRAY& from);

  inline AccountInfo_ARRAY& operator=(const AccountInfo_ARRAY& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountInfo_ARRAY& default_instance();

  void Swap(AccountInfo_ARRAY* other);

  // implements Message ----------------------------------------------

  inline AccountInfo_ARRAY* New() const { return New(NULL); }

  AccountInfo_ARRAY* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountInfo_ARRAY& from);
  void MergeFrom(const AccountInfo_ARRAY& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccountInfo_ARRAY* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .JX.AccountInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::JX::AccountInfo& items(int index) const;
  ::JX::AccountInfo* mutable_items(int index);
  ::JX::AccountInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::JX::AccountInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::JX::AccountInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:JX.AccountInfo_ARRAY)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::JX::AccountInfo > items_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AccountInfo_2eproto();
  friend void protobuf_AssignDesc_AccountInfo_2eproto();
  friend void protobuf_ShutdownFile_AccountInfo_2eproto();

  void InitAsDefaultInstance();
  static AccountInfo_ARRAY* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountInfo

// optional bytes name = 1;
inline void AccountInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountInfo::name() const {
  // @@protoc_insertion_point(field_get:JX.AccountInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JX.AccountInfo.name)
}
inline void AccountInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JX.AccountInfo.name)
}
inline void AccountInfo::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JX.AccountInfo.name)
}
inline ::std::string* AccountInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:JX.AccountInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountInfo::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:JX.AccountInfo.name)
}

// -------------------------------------------------------------------

// AccountInfo_ARRAY

// repeated .JX.AccountInfo items = 1;
inline int AccountInfo_ARRAY::items_size() const {
  return items_.size();
}
inline void AccountInfo_ARRAY::clear_items() {
  items_.Clear();
}
inline const ::JX::AccountInfo& AccountInfo_ARRAY::items(int index) const {
  // @@protoc_insertion_point(field_get:JX.AccountInfo_ARRAY.items)
  return items_.Get(index);
}
inline ::JX::AccountInfo* AccountInfo_ARRAY::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:JX.AccountInfo_ARRAY.items)
  return items_.Mutable(index);
}
inline ::JX::AccountInfo* AccountInfo_ARRAY::add_items() {
  // @@protoc_insertion_point(field_add:JX.AccountInfo_ARRAY.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::JX::AccountInfo >*
AccountInfo_ARRAY::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:JX.AccountInfo_ARRAY.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::JX::AccountInfo >&
AccountInfo_ARRAY::items() const {
  // @@protoc_insertion_point(field_list:JX.AccountInfo_ARRAY.items)
  return items_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace JX

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AccountInfo_2eproto__INCLUDED
